<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Licensed to the Apache Software Foundation (ASF) under one
  ~ or more contributor license agreements.  See the NOTICE file
  ~ distributed with this work for additional information
  ~ regarding copyright ownership.  The ASF licenses this file
  ~ to you under the Apache License, Version 2.0 (the
  ~ "License"); you may not use this file except in compliance
  ~ with the License.  You may obtain a copy of the License at
  ~
  ~    http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->
<bpws:process exitOnStandardFault="yes" name="HelloWorld2"
    targetNamespace="urn:/HeaderTest.bpel"
    xmlns:bpws="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:bpel="http://docs.oasis-open.org/wsbpel/2.0/process/executable"
    xmlns:hello="urn:/HelloWorld2.wsdl" xmlns:tns="urn:/HeaderTest.bpel" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
    <bpws:import importType="http://schemas.xmlsoap.org/wsdl/"
        location="HelloWorld2.wsdl" namespace="urn:/HelloWorld2.wsdl"/>
    <bpws:partnerLinks>
        <bpws:partnerLink myRole="Provider" name="helloPartnerLink" partnerLinkType="hello:HelloPartnerLinkType"/>
    </bpws:partnerLinks>
    <bpws:variables>
        <bpws:variable messageType="hello:HelloRequest" name="input"/>
        <bpws:variable messageType="hello:HelloResponse" name="output"/>
        <bpws:variable name="text" type="xsd:string"/>
    </bpws:variables>
    <bpws:sequence>
        <bpws:receive createInstance="yes" name="start"
            operation="Hello" partnerLink="helloPartnerLink"
            portType="hello:HelloPortType" variable="input"/>

       <bpel:assign name="InitializeOutput" validate="no">
           <bpel:copy>
               <bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[""]]></bpel:from>
               <bpel:to part="body" variable="output"/>
           </bpel:copy>
       </bpel:assign>
       <bpel:scope name="Scope">
           <bpel:faultHandlers>
               <bpel:catch faultName="tns:DummyFault">
                   <bpel:sequence>
                       <bpel:compensate name="Compensate"/>
                   </bpel:sequence>
               </bpel:catch>
           </bpel:faultHandlers>
           <bpel:sequence name="Sequence">
               <bpel:forEach counterName="Counter" name="ForEach" parallel="no">
                   <bpel:startCounterValue expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[1]]></bpel:startCounterValue>
                   <bpel:finalCounterValue expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[5]]></bpel:finalCounterValue>
                   <bpel:scope name="IterateScope">
                       <bpel:compensationHandler>
                           <bpel:sequence>
                               <bpel:assign name="Assign" validate="no">
                                   <bpel:copy>
                                   <bpel:from expressionLanguage="urn:oasis:names:tc:wsbpel:2.0:sublang:xpath2.0"><![CDATA[concat($output.body, " ", $Counter)]]></bpel:from>
                                   <bpel:to part="body" variable="output"/>
                                   </bpel:copy>
                               </bpel:assign>
                           </bpel:sequence>
                       </bpel:compensationHandler>
                       <bpel:empty name="DoSomething5Times"/>
                   </bpel:scope>
               </bpel:forEach>
               <bpel:throw faultName="tns:DummyFault" name="Throw"/>
           </bpel:sequence>
       </bpel:scope>
        <bpws:reply name="end" operation="Hello"
            partnerLink="helloPartnerLink"
            portType="hello:HelloPortType" variable="output"/>
    </bpws:sequence>
</bpws:process>
